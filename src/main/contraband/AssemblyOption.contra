package sbtassembly
@target(Scala)

type AssemblyOption {
  assemblyDirectory: java.io.File @since("0.15.0")

  assemblyUnzipDirectory: java.io.File @since("1.2.0")

  ## include compiled class files from itself or subprojects
  includeBin: Boolean! = true @since("0.15.0")

  includeScala: Boolean! = true @since("0.15.0")

  ## include class files from external dependencies
  includeDependency: Boolean! = true @since("0.15.0")

  excludedJars: sbt.Keys.Classpath! = raw"Nil" @since("0.15.0")

  excludedFiles: sbtassembly.Assembly.SeqFileToSeqFile! = raw"sbtassembly.Assembly.defaultExcludedFiles" @since("0.15.0")

  mergeStrategy: sbtassembly.MergeStrategy.StringToMergeStrategy! = raw"sbtassembly.MergeStrategy.defaultMergeStrategy" @since("0.15.0")

  cacheOutput: Boolean! = true @since("0.15.0")

  cacheUnzip: Boolean! = true @since("0.15.0")

  ## this is experimental but will use a hard link between the files in assemblyUnzipDirectory to assemblyDirectory to avoid additional copy IO
  cacheUseHardLinks: Boolean! = false @since("1.2.0")

  appendContentHash: Boolean! = false @since("0.15.0")

  prependShellScript: sbtassembly.Assembly.SeqString @since("0.15.0")

  maxHashLength: Int @since("0.15.0")

  shadeRules: sbtassembly.Assembly.SeqShadeRules! = raw"sbtassembly.Assembly.defaultShadeRules" @since("0.15.0")

  scalaVersion: String! = "" @since("0.15.0")

  level: sbt.Level.Value! = raw"sbt.Level.Info" @since("0.15.0")
}
